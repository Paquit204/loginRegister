/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package admin;

import config.Session;
import config.dbConnect;
import java.awt.Color;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.TableModel;
import net.proteanit.sql.DbUtils;


/**
 *
 * @author CYBER SECURITY
 */
public class requestForm extends javax.swing.JFrame {
     
    /**
     * Creates new form adminDashboard
     */ 
       

    public requestForm() {
        initComponents();
         this.setLocationRelativeTo(null); // Make Jframe Center allighnment
        displayData();
       
        
    } 
    
      
                  
       Color nc=new Color( 83,203,209);
       Color hc=new Color(0,0,51);
       
        void displayData(){
         try{
             dbConnect dbc = new dbConnect();
             // Changed this SELECT to include pet type and account names for display in the table,
             // assuming you want to see them directly in the usersTable as well.
             // If not, revert to "SELECT * FROM adoption"
             ResultSet rst = dbc.getData("SELECT ad.adoption_id, ad.a_id, ad.p_id, ad.date, ad.a_status, " +
                                         "p.p_type AS pet_type_display, " + // Alias for display purposes
                                         "CONCAT(acc.firstname, ' ', acc.lastname) AS Costumer_name_display " + // Alias for display purposes
                                         "FROM adoption AS ad " +
                                         "LEFT JOIN pet AS p ON ad.p_id = p.p_id " +
                                         "LEFT JOIN accounts AS acc ON ad.a_id = acc.a_id");
             usersTable.setModel(DbUtils.resultSetToTableModel(rst));
              rst.close();
         }catch(SQLException ex){
             System.out.println("Errors: "+ex.getMessage());

         }


    }
  
          
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        header = new javax.swing.JPanel();
        Uback = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        body = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        usersTable = new javax.swing.JTable();
        header6 = new javax.swing.JPanel();
        U_id = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        print = new javax.swing.JPanel();
        U_id2 = new javax.swing.JLabel();
        approve = new javax.swing.JPanel();
        U_id1 = new javax.swing.JLabel();
        decline = new javax.swing.JPanel();
        U_id3 = new javax.swing.JLabel();
        header1 = new javax.swing.JPanel();

        header.setBackground(new java.awt.Color(204, 204, 204));
        header.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });
        getContentPane().setLayout(null);

        Uback.setBackground(new java.awt.Color(83, 203, 209));
        Uback.setForeground(new java.awt.Color(5, 92, 157));
        Uback.setPreferredSize(new java.awt.Dimension(760, 60));
        Uback.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("BACK");
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });
        Uback.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 0, 60, 60));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 0));
        jLabel3.setText("REQUEST FORM");
        Uback.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 170, 60));

        getContentPane().add(Uback);
        Uback.setBounds(0, 0, 730, 60);

        body.setBackground(new java.awt.Color(0, 0, 51));
        body.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        body.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        usersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(usersTable);

        body.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 10, 560, 280));

        header6.setBackground(new java.awt.Color(0, 0, 51));
        header6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        U_id.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        U_id.setForeground(new java.awt.Color(255, 255, 255));
        U_id.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        U_id.setText("ID");
        U_id.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        U_id.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                U_idMouseClicked(evt);
            }
        });
        header6.add(U_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 130, 40));

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/user-removebg-preview (1).png"))); // NOI18N
        jLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        header6.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 130, 100));

        print.setBackground(new java.awt.Color(0, 0, 51));
        print.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                printMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                printMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                printMouseExited(evt);
            }
        });
        print.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        U_id2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        U_id2.setForeground(new java.awt.Color(255, 255, 255));
        U_id2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        U_id2.setText("PRINT");
        U_id2.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        U_id2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                U_id2MouseClicked(evt);
            }
        });
        print.add(U_id2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, 80, 10));

        header6.add(print, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, 130, 30));

        approve.setBackground(new java.awt.Color(0, 0, 51));
        approve.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                approveMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                approveMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                approveMouseExited(evt);
            }
        });
        approve.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        U_id1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        U_id1.setForeground(new java.awt.Color(255, 255, 255));
        U_id1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        U_id1.setText("APPROVE");
        U_id1.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        U_id1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                U_id1MouseClicked(evt);
            }
        });
        approve.add(U_id1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, 80, 10));

        header6.add(approve, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, 130, 30));

        decline.setBackground(new java.awt.Color(0, 0, 51));
        decline.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                declineMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                declineMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                declineMouseExited(evt);
            }
        });
        decline.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        U_id3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        U_id3.setForeground(new java.awt.Color(255, 255, 255));
        U_id3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        U_id3.setText("DECLINE");
        U_id3.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        U_id3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                U_id3MouseClicked(evt);
            }
        });
        decline.add(U_id3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, 80, 10));

        header6.add(decline, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, 130, 30));

        body.add(header6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 150, 280));

        getContentPane().add(body);
        body.setBounds(0, 60, 730, 310);

        header1.setBackground(new java.awt.Color(204, 204, 204));
        header1.setLayout(null);
        getContentPane().add(header1);
        header1.setBounds(0, 0, 760, 50);

        setSize(new java.awt.Dimension(742, 409));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
           
      
        AdminDashboard adb = new AdminDashboard();
        adb.setVisible(true);
        this.dispose();
    
             
    }//GEN-LAST:event_jLabel1MouseClicked

    private void U_idMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_U_idMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_U_idMouseClicked

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        
         Session ses = Session.getInstance(); 
        U_id.setText(""+ses.getA_id());
        
    }//GEN-LAST:event_formWindowActivated

    private void U_id1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_U_id1MouseClicked
        AddUsersForm af=new AddUsersForm();
                af.setVisible(true);
                this.dispose();
                
    }//GEN-LAST:event_U_id1MouseClicked

    private void approveMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_approveMouseEntered
        
        
       
        
        approve.setBackground(nc);
    }//GEN-LAST:event_approveMouseEntered

    private void approveMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_approveMouseExited
        approve.setBackground(hc);
    }//GEN-LAST:event_approveMouseExited

    private void approveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_approveMouseClicked
           int row = usersTable.getSelectedRow();

        if (row < 0) {
            JOptionPane.showMessageDialog(this, "Please select an adoption request from the table first.", "No Row Selected", JOptionPane.WARNING_MESSAGE);
            return;
            
        }

        // Assuming 'adopt_id' is in the first column (index 0) of your usersTable
        Object adoptIdObj = usersTable.getValueAt(row, 0);
        if (adoptIdObj == null) {
            JOptionPane.showMessageDialog(this, "Could not get Adoption ID from selected row.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            int adoptId = Integer.parseInt(adoptIdObj.toString());

            dbConnect dbc = new dbConnect();
            String sql = "UPDATE adoption SET a_status = ? WHERE adoption_id = ?";
            PreparedStatement pst = dbc.getConnection().prepareStatement(sql);
            pst.setString(1, "Approved");
            pst.setInt(2, adoptId);

            int rowsAffected = pst.executeUpdate();

            if (rowsAffected > 0) {
                JOptionPane.showMessageDialog(this, "Adoption request Approved successfully!");
                displayData(); // Refresh the table to show the updated status
            } else {
                JOptionPane.showMessageDialog(this, "Failed to approve adoption request. No matching ID found.", "Update Failed", JOptionPane.ERROR_MESSAGE);
            }
            pst.close();
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Invalid Adoption ID format: " + e.getMessage(), "Data Error", JOptionPane.ERROR_MESSAGE);
        } catch (SQLException ex) {
            System.out.println("Errors: " + ex.getMessage());
            JOptionPane.showMessageDialog(this, "Database error: " + ex.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
        }
       
    }//GEN-LAST:event_approveMouseClicked

    private void U_id3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_U_id3MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_U_id3MouseClicked

    private void declineMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_declineMouseClicked
        
         int row = usersTable.getSelectedRow();

        if (row < 0) {
            JOptionPane.showMessageDialog(this, "Please select an adoption request from the table first.", "No Row Selected", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // Assuming 'adopt_id' is in the first column (index 0) of your usersTable
        Object adoptIdObj = usersTable.getValueAt(row, 0);
        if (adoptIdObj == null) {
            JOptionPane.showMessageDialog(this, "Could not get Adoption ID from selected row.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            int adoptId = Integer.parseInt(adoptIdObj.toString());

            dbConnect dbc = new dbConnect();
            String sql = "UPDATE adoption SET a_status = ? WHERE adoption_id = ?";
            PreparedStatement pst = dbc.getConnection().prepareStatement(sql);
            pst.setString(1, "Declined");
            pst.setInt(2, adoptId);

            int rowsAffected = pst.executeUpdate();

            if (rowsAffected > 0) {
                JOptionPane.showMessageDialog(this, "Adoption request Declined successfully!");
                displayData(); // Refresh the table to show the updated status
            } else {
                JOptionPane.showMessageDialog(this, "Failed to decline adoption request. No matching ID found.", "Update Failed", JOptionPane.ERROR_MESSAGE);
            }
            pst.close();
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Invalid Adoption ID format: " + e.getMessage(), "Data Error", JOptionPane.ERROR_MESSAGE);
        } catch (SQLException ex) {
            System.out.println("Errors: " + ex.getMessage());
            JOptionPane.showMessageDialog(this, "Database error: " + ex.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_declineMouseClicked

    private void declineMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_declineMouseEntered
         decline.setBackground(nc);
    }//GEN-LAST:event_declineMouseEntered

    private void declineMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_declineMouseExited
         decline.setBackground(hc);
    }//GEN-LAST:event_declineMouseExited

    private void U_id2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_U_id2MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_U_id2MouseClicked

    private void printMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_printMouseClicked
          
          int rowIndex  = usersTable.getSelectedRow();
        if(rowIndex < 0){
            JOptionPane.showMessageDialog(null,"Please Select Item!");
        }else{
            TableModel model= usersTable.getModel();
            PrintingReciepts  adf = new  PrintingReciepts ();
            try{
                dbConnect dbc = new dbConnect();
                TableModel tbl= usersTable.getModel();
 
                // Modified SQL query to join with pets and accounts tables
                // Now using 'p_type' from 'pets' and 'first_name', 'last_name' from 'accounts'
                String sql = "SELECT ad.adoption_id, ad.date, ad.a_status, " +
                             "p.p_type, acc.firstname, acc.lastname " +
                             "FROM adoption AS ad " +
                             "JOIN pet AS p ON ad.p_id = p.p_id " +
                             "JOIN accounts AS acc ON ad.a_id = acc.a_id " +
                             "WHERE ad.adoption_id = ?";
                PreparedStatement pst = dbc.getConnection().prepareStatement(sql);
                pst.setInt(1, Integer.parseInt(tbl.getValueAt(rowIndex, 0).toString()));
                ResultSet rs = pst.executeQuery();

                if(rs.next()){
                    adf.adoption_id.setText(""+rs.getInt("adoption_id"));
                    adf.date.setText(""+rs.getString("date"));
                    adf.status.setText(""+rs.getString("a_status"));

                    // Set the pet type and applicant name using the new column names
                    // Still assuming 'p_id' JLabel for pet type and 'a_id' JLabel for applicant name
                    // REMINDER: It is strongly recommended to rename these JLabels in PrintingReciepts for clarity
                    adf.p_id.setText(""+rs.getString("p_type")); // Now getting "p_type" from ResultSet
                    adf.a_id.setText(rs.getString("firstname") + " " + rs.getString("lastname")); // Now getting "first_name" and "last_name"

                    adf.setVisible(true);
                    this.dispose();

                } else {
                    JOptionPane.showMessageDialog(null, "No data found for the selected adoption ID.");
                }
                rs.close();
                pst.close();
            }catch(SQLException ex){
                System.out.println("Connection Error! "+ex.getMessage());
                JOptionPane.showMessageDialog(null, "Database Error: " + ex.getMessage());
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Invalid Adoption ID format in table: " + e.getMessage());
            }
        }

                 
        
    }//GEN-LAST:event_printMouseClicked

    private void printMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_printMouseEntered
          print.setBackground(nc);
    }//GEN-LAST:event_printMouseEntered

    private void printMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_printMouseExited
        print.setBackground(hc);
    }//GEN-LAST:event_printMouseExited

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(requestForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(requestForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(requestForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(requestForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new requestForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel U_id;
    private javax.swing.JLabel U_id1;
    private javax.swing.JLabel U_id2;
    private javax.swing.JLabel U_id3;
    private javax.swing.JPanel Uback;
    private javax.swing.JPanel approve;
    private javax.swing.JPanel body;
    private javax.swing.JPanel decline;
    private javax.swing.JPanel header;
    private javax.swing.JPanel header1;
    private javax.swing.JPanel header6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel print;
    private javax.swing.JTable usersTable;
    // End of variables declaration//GEN-END:variables
}
